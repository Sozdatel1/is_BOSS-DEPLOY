name: Run bot

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
    paths:
      - "user_interface.py"

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 355

    concurrency:
      group: bot-run
      cancel-in-progress: false

    env:
      LICHESS_KEY: ${{ secrets.LICHESS_KEY }}
      BOT_TOKEN: ${{ secrets.BOT_TOKEN }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Cache pip downloads
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies & prepare
        run: |
          pip install --no-cache-dir --prefer-binary -r requirements.txt
          sed -i "s/TokenTimeIsBackBuddyss/${{ secrets.LICHESS_KEY }}/g" config.yml
          chmod +x ./engines/stockfish-ubuntu-x86-64-bmi2 ./engines/fairy-stockfish_x86-64-bmi2 ./engines/stockfish-7-x64-bmi2

      - name: Set environment variables
        run: |
          echo "LICHESS_KEY=${{ secrets.LICHESS_KEY }}" >> $GITHUB_ENV
          echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" >> $GITHUB_ENV

      - name: Run Bot with Logging
        run: |
          echo "Starting bot..."
          export LICHESS_KEY=${{ secrets.LICHESS_KEY }}
          export BOT_TOKEN=${{ secrets.BOT_TOKEN }}
          python3 -u user_interface.py "matchmaking" "tournament JUT6xRg3" &
          PID=$!
          ( sleep 20700 && echo "Time up. Killing bot..." && kill -SIGTERM $PID ) &
          wait $PID
          echo "Bot ended cleanly."

      - name: üîÅ Self-Restart
        if: always()
        run: gh workflow run "Run bot"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: bot-logs
          path: bot.log







